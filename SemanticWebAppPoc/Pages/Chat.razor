@page "/chat"

<PageTitle>Summarize</PageTitle>

<h1>Welcome to the summary app!</h1>

<div class="chat-container">
    <div class="message-display">
        @foreach (var message in messages)
        {
            <div class="@((message.IsSent ? "sent-message" : "received-message"))">
                @message.Text
            </div>
        }
    </div>

    <EditForm Model="this" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="input-container">
            <InputText @bind-Value="userMessage" placeholder="Type your message..." class="message-input" />
            <button type="submit" class="btn btn-primary">Send</button>
            <button type="button" class="btn btn-primary" @onclick="RegenerateLastMessage">Regenerate</button>
        </div>
    </EditForm>
</div>

@code {
    private string userMessage;
    private List<Message> messages = new List<Message>();
    private string lastMessage; // Track the last sent message

    private void SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(userMessage))
        {
            messages.Add(new Message { Text = userMessage, IsSent = true });
            messages.Add(new Message { Text = userMessage, IsSent = false });
            lastMessage = userMessage; // Store the last sent message
            userMessage = string.Empty; // Clear the input after sending
        }
    }

    private void HandleValidSubmit()
    {
        SendMessage();
    }

    private void RegenerateLastMessage()
    {
        if (messages.Count > 0) // Check if there are messages to regenerate
        {
            messages.RemoveAt(messages.Count - 1); // Remove the last message
            userMessage = lastMessage; // Set the input to the last message
        }
    }

    public class Message
    {
        public string Text { get; set; }
        public bool IsSent { get; set; }
    }
}

